class Solution {
public:
int solve(int ind, vector<int>& prices, int buy, int cap, vector<vector<vector<int>>>&dp){
    if(ind==prices.size())return 0;
    if(cap==0)return 0;
    if(dp[ind][buy][cap]!=-1)return dp[ind][buy][cap];
    if(buy){
        return dp[ind][buy][cap]=max(-prices[ind]+solve(ind+1,prices,0,cap,dp),solve(ind+1,prices,1,cap,dp));
    }
    return dp[ind][buy][cap]=max(prices[ind]+solve(ind+1,prices,1,cap-1,dp),solve(ind+1,prices,0,cap,dp));
}
    int maxProfit(int k, vector<int>& prices) {
        int n=prices.size();
        vector<vector<vector<int>>>dp(n,vector<vector<int>>(2,vector<int>(k+1,-1)));
        return solve(0,prices,1,k,dp);
    }
};`