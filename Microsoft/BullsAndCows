class Solution {
public:
    string getHint(string secret, string guess) {
        int b=0;
        int c=0;
        unordered_map<char,int>mp;
        for(int i=0; i<guess.size(); i++){
            if(secret[i]!=guess[i]){
                mp[secret[i]]++;
            }
        }
       
         int i=0,j=0;
        while(i<secret.size()){
            if(secret[i]==guess[j]){
                b++;
            }
            i++;j++;
        }
        for(int k=0; k<guess.size(); k++){
            if(guess[k]!=secret[k]){
                if(mp.find(guess[k])!=mp.end()){
                    c++;
                    mp[guess[k]]--;
                    if(mp[guess[k]]==0)mp.erase(guess[k]);
                      for(auto it:mp){
            cout<<it.first<<it.second<<endl;
        }
                }
            }
        }
        string a=to_string(b);
        string B=to_string(c);
        return a+"A"+B+"B";

    }
};